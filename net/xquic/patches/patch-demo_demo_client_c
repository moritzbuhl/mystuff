Index: demo/demo_client.c
--- demo/demo_client.c.orig
+++ demo/demo_client.c
@@ -1,6 +1,7 @@
 /**
  * @copyright Copyright (c) 2022, Alibaba Group Holding Limited
  */
+#include <sys/stat.h>
 
 #define _GNU_SOURCE
 
@@ -16,7 +17,7 @@
 #include <time.h>
 #include <inttypes.h>
 #include <string.h>
-#include <event2/event.h>
+#include <event.h>
 #include "common.h"
 #include "xqc_hq.h"
 #include "../tests/platform.h"
@@ -35,13 +36,35 @@
 #include <netdb.h>
 #endif
 
+#include <netinet/in.h>
 
 #define XQC_PACKET_TMP_BUF_LEN  1600
 #define MAX_BUF_SIZE            (100*1024*1024)
 #define XQC_INTEROP_TLS_GROUPS  "X25519:P-256:P-384:P-521"
 #define MAX_PATH_CNT            2
 
+struct event *
+event_new(struct event_base *eb, int fd, short events,
+	void (*callback)(int, short, void *), void *arg)
+{
+    struct event * ev;
 
+    if ((ev = malloc(sizeof(struct event))) == NULL)
+        return NULL;
+
+    event_set(ev, fd, events, callback, arg);
+
+    return ev;
+}
+
+void
+event_free(struct event *ev)
+{
+    event_del(ev);
+    free(ev);
+}
+
+
 typedef enum xqc_demo_cli_alpn_type_s {
     ALPN_HQ,
     ALPN_H3,
@@ -1709,7 +1732,7 @@ xqc_demo_cli_parse_server_addr(char *url, xqc_demo_cli
     /* set hint for hostname resolve */
     struct addrinfo hints = {0};
     memset(&hints, 0, sizeof(struct addrinfo));
-    hints.ai_family = AF_UNSPEC;    /* Allow IPv4 or IPv6 */
+    hints.ai_family = AF_INET;
     hints.ai_socktype = SOCK_DGRAM; /* Datagram socket */
     hints.ai_flags = AI_PASSIVE;    /* For wildcard IP address */
     hints.ai_protocol = 0;          /* Any protocol */
@@ -2678,7 +2701,7 @@ xqc_demo_cli_create_socket(xqc_demo_cli_user_path_t *u
         memset(&ifr, 0x00, sizeof(ifr));
         strncpy(ifr.ifr_name, cfg->iflist[path_seq], sizeof(ifr.ifr_name) - 1);
 
-#if !defined(__APPLE__)
+#if !defined(__APPLE__) && !defined(__OpenBSD__)
         printf("fd: %d. bind to nic: %s\n", fd, cfg->iflist[path_seq]);
         if (setsockopt(fd, SOL_SOCKET, SO_BINDTODEVICE, (char *)&ifr, sizeof(ifr)) < 0) {
             printf("bind to nic error: %d, try use sudo\n", errno);
